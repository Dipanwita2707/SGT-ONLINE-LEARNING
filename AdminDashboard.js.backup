import React, { useEffect, useState } from 'react';
import { Routes, Route, Navigate, useNavigate } from 'react-router-dom';
import { 
  Typography, 
  List, 
  ListItem, 
  ListItemText,
  B  return (
    <Box sx={{ 
      display: 'flex', 
      minHeight: '100vh', 
      backgroundColor: '#f8fafc'
    }}>
      <ProfessionalSidebar currentUser={currentUser} /> Button, 
  Grid, 
  Card, 
  CardContent, 
  CardHeader, 
  Avatar, 
  Divider,
  IconButton,
  Menu,
  MenuItem,
  Tooltip,
  useTheme,
  Chip,
  Skeleton
} from '@mui/material';
import axios from 'axios';
import ForumIcon from '@mui/icons-material/Forum';
import DashboardIcon from '@mui/icons-material/Dashboard';
import NotificationsActiveIcon from '@mui/icons-material/NotificationsActive';
import EventNoteIcon from '@mui/icons-material/EventNote';
import LogoutIcon from '@mui/icons-material/Logout';
import AccountCircleIcon from '@mui/icons-material/AccountCircle';
import OpenInNewIcon from '@mui/icons-material/OpenInNew';
import PeopleIcon from '@mui/icons-material/People';
import SchoolIcon from '@mui/icons-material/School';
import TrendingUpIcon from '@mui/icons-material/TrendingUp';
import VideoLibraryIcon from '@mui/icons-material/VideoLibrary';

import { parseJwt } from '../utils/jwt';
import { useUserRole } from '../contexts/UserRoleContext';
import { logoutUser } from '../utils/authService';
import ProfessionalSidebar from '../components/ProfessionalSidebar';
import NotificationBell from '../components/admin/NotificationBell';
import RoleSwitcher from '../components/RoleSwitcher';
import AnnouncementPage from './AnnouncementPage';
import AnalyticsDashboard from './admin/AnalyticsDashboard';
import EnhancedAnalytics from './admin/EnhancedAnalytics';
import TeacherManagement from './admin/TeacherManagement';
import StudentManagement from './admin/StudentManagement';
import CourseManagement from './admin/CourseManagement';
import SchoolManagement from './admin/SchoolManagement';
import DepartmentManagement from './admin/DepartmentManagement';
import SectionManagement from '../components/admin/SectionManagement';
import DeanManagement from './admin/DeanManagement';
import HODManagement from './admin/HODManagement';
import ForumModeration from './admin/ForumModeration';
import RoleManagement from './admin/RoleManagement';
import UnlockRequests from './admin/UnlockRequests';
import UserRoleManagement from './admin/UserRoleManagement';


const AdminDashboard = () => {
  const theme = useTheme();
  const token = localStorage.getItem('token');
  const currentUser = parseJwt(token);
  const { user: contextUser, hasRole, activeRole } = useUserRole();
  const navigate = useNavigate();
  
  // Use context user if available, fallback to parsed JWT
  const user = contextUser || currentUser;
  
  // Notifications section state
  const [notifications, setNotifications] = useState([]);
  const [notificationsLoading, setNotificationsLoading] = useState(true);
  
  // Activity feed state
  const [activity, setActivity] = useState([]);
  const [activityLoading, setActivityLoading] = useState(true);
  
  // Dashboard stats state
  const [dashboardStats, setDashboardStats] = useState({
    totalUsers: 0,
    totalCourses: 0,
    activeStudents: 0,
    totalTeachers: 0
  });
  const [statsLoading, setStatsLoading] = useState(true);
  
  // User menu state
  const [userMenuAnchor, setUserMenuAnchor] = useState(null);
  
  // Check if we're on a sub-page
  const isOnMainDashboard = window.location.pathname === '/admin' || window.location.pathname === '/admin/';

  useEffect(() => {
    if (!token) return;
    
    // Fetch notifications
    (async () => {
      try {
        setNotificationsLoading(true);
        const res = await axios.get('/api/notifications', { headers: { Authorization: `Bearer ${token}` } });
        setNotifications(Array.isArray(res.data) ? res.data : []);
      } catch (error) {
        console.error('Error fetching notifications:', error);
        setNotifications([]);
      } finally {
        setNotificationsLoading(false);
      }
    })();
    
    // Fetch activity feed
    (async () => {
      try {
        setActivityLoading(true);
        const res = await axios.get('/api/admin/audit-logs/recent', { headers: { Authorization: `Bearer ${token}` } });
        setActivity(Array.isArray(res.data) ? res.data : []);
      } catch (error) {
        console.error('Error fetching activity logs:', error);
        setActivity([]);
      } finally {
        setActivityLoading(false);
      }
    })();
    
    // Fetch dashboard stats
    (async () => {
      try {
        setStatsLoading(true);
        const [usersRes, coursesRes, studentsRes, teachersRes] = await Promise.all([
          axios.get('/api/admin/users/count', { headers: { Authorization: `Bearer ${token}` } }),
          axios.get('/api/admin/courses/count', { headers: { Authorization: `Bearer ${token}` } }),
          axios.get('/api/admin/students/active/count', { headers: { Authorization: `Bearer ${token}` } }),
          axios.get('/api/admin/teachers/count', { headers: { Authorization: `Bearer ${token}` } })
        ]);
        
        setDashboardStats({
          totalUsers: usersRes.data.count || 0,
          totalCourses: coursesRes.data.count || 0,
          activeStudents: studentsRes.data.count || 0,
          totalTeachers: teachersRes.data.count || 0
        });
      } catch (error) {
        console.error('Error fetching dashboard stats:', error);
      } finally {
        setStatsLoading(false);
      }
    })();
  }, [token]);

  // User menu handlers
  const handleUserMenuOpen = (event) => {
    setUserMenuAnchor(event.currentTarget);
  };
  
  const handleUserMenuClose = () => {
    setUserMenuAnchor(null);
  };
  
  // Logout handler
  const handleLogout = async () => {
    handleUserMenuClose();
    const result = await logoutUser();
    if (result.success) {
      navigate('/login');
    }
  };

  // Helper function to render loading or empty state
  const renderLoadingOrEmpty = (loading, items, emptyMessage) => {
    if (loading) {
      return (
        <ListItem>
          <ListItemText 
            primary={<Skeleton variant="text" width="80%" />}
            secondary={<Skeleton variant="text" width="60%" />}
          />
        </ListItem>
      );
    }
    
    if (items.length === 0) {
      return (
        <ListItem>
          <ListItemText 
            primary={emptyMessage}
            primaryTypographyProps={{
              color: 'text.secondary',
              fontStyle: 'italic'
            }}
          />
        </ListItem>
      );
    }
    
    return null;
  };
  


  return (
    <Box sx={{ 
      display: 'flex', 
      minHeight: '100vh', 
      backgroundColor: '#f8fafc'
    }}>
      <Sidebar currentUser={currentUser} />
      
      {/* Main Content Area */}
      <Box sx={{ 
        flexGrow: 1, 
        ml: '280px', // Account for fixed sidebar width
        display: 'flex',
        flexDirection: 'column'
      }}>
        {/* Professional Top Header Bar */}
        <Box sx={{ 
          backgroundColor: 'white',
          borderBottom: '1px solid #e5e7eb',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'space-between',
          px: 4,
          py: 2.5,
          boxShadow: '0 1px 3px rgba(0,0,0,0.05)',
          zIndex: 100
        }}>
          <Box>
            <Typography 
              variant="h5" 
              sx={{ 
                color: '#1f2937',
                fontWeight: 700,
                display: 'flex',
                alignItems: 'center',
                gap: 2,
                mb: 0.5
              }}
            >
              <Box 
                sx={{
                  width: 32,
                  height: 32,
                  backgroundColor: theme.palette.primary.main,
                  borderRadius: 2,
                  display: 'flex',
                  alignItems: 'center',
                  justifyContent: 'center',
                  color: 'white'
                }}
              >
                ðŸ“Š
              </Box>
              Analytics Dashboard
            </Typography>
            <Typography 
              variant="body2" 
              sx={{ 
                color: '#6b7280',
                fontWeight: 400
              }}
            >
              Toggle metrics visibility to customize your dashboard view
            </Typography>
          </Box>
          
          <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>
            <RoleSwitcher />
            <NotificationBell token={token} />
            <Tooltip title="Account Settings">
              <IconButton 
                onClick={handleUserMenuOpen}
                size="medium"
                sx={{ 
                  bgcolor: theme.palette.primary.main, 
                  color: 'white',
                  width: 44,
                  height: 44,
                  '&:hover': { 
                    bgcolor: theme.palette.primary.dark,
                    transform: 'scale(1.05)'
                  },
                  transition: 'all 0.2s ease-in-out',
                  boxShadow: '0 2px 8px rgba(0,0,0,0.1)'
                }}
              >
                <AccountCircleIcon />
              </IconButton>
            </Tooltip>
            <Menu
              anchorEl={userMenuAnchor}
              open={Boolean(userMenuAnchor)}
              onClose={handleUserMenuClose}
              anchorOrigin={{
                vertical: 'bottom',
                horizontal: 'right',
              }}
              transformOrigin={{
                vertical: 'top',
                horizontal: 'right',
              }}
              PaperProps={{
                sx: {
                  bgcolor: 'background.paper',
                  border: `1px solid ${theme.palette.divider}`,
                  borderRadius: 3,
                  boxShadow: '0 8px 32px rgba(0,0,0,0.12)',
                  minWidth: 140
                }
              }}
            >
              <MenuItem 
                onClick={handleLogout}
                sx={{
                  color: 'text.primary',
                  py: 1.5,
                  px: 2,
                  '&:hover': {
                    bgcolor: 'action.hover'
                  }
                }}
              >
                <LogoutIcon fontSize="small" sx={{ mr: 2, color: 'error.main' }} />
                Logout
              </MenuItem>
            </Menu>
          </Box>
        </Box>

        {/* Main Dashboard Content */}
        <Box 
          component="main" 
          sx={{ 
            flexGrow: 1, 
            p: 4,
            backgroundColor: '#f8fafc',
            minHeight: 'calc(100vh - 80px)' // Subtract header height
          }}
        >
        {isOnMainDashboard && (
          <>
            {/* Analytics Dashboard Header */}
            <Box sx={{ mb: 4 }}>
              <Typography 
                variant="h4" 
                component="h1" 
                sx={{ 
                  color: '#1f2937',
                  fontWeight: 600,
                  mb: 1,
                  display: 'flex',
                  alignItems: 'center',
                  gap: 2
                }}
              >
                <Box
                  sx={{
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    width: 32,
                    height: 32,
                    borderRadius: 1,
                    backgroundColor: theme.palette.primary.main,
                    color: 'white'
                  }}
                >
                  ðŸ“Š
                </Box>
                Analytics Dashboard
              </Typography>
              <Typography 
                variant="body1" 
                sx={{ 
                  color: '#6b7280',
                  fontWeight: 400
                }}
              >
                Toggle metrics visibility to customize your dashboard view
              </Typography>
            </Box>

            {/* Dashboard Customization */}
            <Card sx={{ 
              mb: 3, 
              p: 3,
              borderRadius: 2,
              boxShadow: '0 1px 3px rgba(0,0,0,0.1)',
              border: '1px solid #e5e7eb'
            }}>
              <Typography variant="h6" sx={{ fontWeight: 600, mb: 2 }}>
                Dashboard Customization
              </Typography>
              <Typography variant="body2" color="text.secondary" sx={{ mb: 3 }}>
                Toggle metrics visibility to customize your dashboard view
              </Typography>
              
              <Box sx={{ display: 'flex', gap: 3, flexWrap: 'wrap' }}>
                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                  <Box sx={{ 
                    width: 12, 
                    height: 12, 
                    borderRadius: '50%', 
                    backgroundColor: theme.palette.primary.main 
                  }} />
                  <Typography variant="body2">Total Students</Typography>
                </Box>
                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                  <Box sx={{ 
                    width: 12, 
                    height: 12, 
                    borderRadius: '50%', 
                    backgroundColor: '#10b981' 
                  }} />
                  <Typography variant="body2">Active Students</Typography>
                </Box>
                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                  <Box sx={{ 
                    width: 12, 
                    height: 12, 
                    borderRadius: '50%', 
                    backgroundColor: '#f59e0b' 
                  }} />
                  <Typography variant="body2">Total Courses</Typography>
                </Box>
                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                  <Box sx={{ 
                    width: 12, 
                    height: 12, 
                    borderRadius: '50%', 
                    backgroundColor: '#8b5cf6' 
                  }} />
                  <Typography variant="body2">Total Videos</Typography>
                </Box>
              </Box>
            </Card>
            
            {/* Modern Dashboard Stats Cards */}
            <Grid container spacing={3} sx={{ mb: 4 }}>
              <Grid item xs={12} sm={6} md={3}>
                <Card 
                  sx={{ 
                    p: 3,
                    borderRadius: 3,
                    background: '#e0f2fe',
                    border: 'none',
                    boxShadow: 'none',
                    position: 'relative',
                    cursor: 'pointer',
                    transition: 'all 0.2s ease',
                    '&:hover': {
                      transform: 'translateY(-2px)',
                      boxShadow: '0 4px 20px rgba(0,0,0,0.1)'
                    }
                  }}
                >
                  <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 2 }}>
                    <Box
                      sx={{
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        width: 40,
                        height: 40,
                        borderRadius: 2,
                        backgroundColor: theme.palette.primary.main,
                        color: 'white'
                      }}
                    >
                      ðŸ‘¥
                    </Box>
                    <IconButton size="small">
                      <OpenInNewIcon sx={{ fontSize: 16 }} />
                    </IconButton>
                  </Box>
                  <Typography variant="h3" sx={{ fontWeight: 700, color: '#1f2937', mb: 1 }}>
                    {statsLoading ? <Skeleton width={60} /> : dashboardStats.totalUsers || '33'}
                  </Typography>
                  <Typography variant="body2" sx={{ color: '#6b7280', mb: 1 }}>
                    Total registered students
                  </Typography>
                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>
                    <Typography variant="caption" sx={{ color: theme.palette.primary.main, fontWeight: 600 }}>
                      Students
                    </Typography>
                  </Box>
                </Card>
              </Grid>
              
              <Grid item xs={12} sm={6} md={3}>
                <Card 
                  sx={{ 
                    p: 3,
                    borderRadius: 3,
                    background: '#f0fdf4',
                    border: 'none',
                    boxShadow: 'none',
                    position: 'relative',
                    cursor: 'pointer',
                    transition: 'all 0.2s ease',
                    '&:hover': {
                      transform: 'translateY(-2px)',
                      boxShadow: '0 4px 20px rgba(0,0,0,0.1)'
                    }
                  }}
                >
                  <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 2 }}>
                    <Box
                      sx={{
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        width: 40,
                        height: 40,
                        borderRadius: 2,
                        backgroundColor: '#10b981',
                        color: 'white'
                      }}
                    >
                      ðŸ‘¥
                    </Box>
                    <IconButton size="small">
                      <OpenInNewIcon sx={{ fontSize: 16 }} />
                    </IconButton>
                  </Box>
                  <Typography variant="h3" sx={{ fontWeight: 700, color: '#1f2937', mb: 1 }}>
                    {statsLoading ? <Skeleton width={60} /> : dashboardStats.activeStudents || '0'}
                  </Typography>
                  <Typography variant="body2" sx={{ color: '#6b7280', mb: 1 }}>
                    Active students (last 10 min)
                  </Typography>
                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>
                    <Typography variant="caption" sx={{ color: '#10b981', fontWeight: 600 }}>
                      Active
                    </Typography>
                  </Box>
                </Card>
              </Grid>
              
              <Grid item xs={12} sm={6} md={3}>
                <Card 
                  sx={{ 
                    p: 3,
                    borderRadius: 3,
                    background: '#fef3c7',
                    border: 'none',
                    boxShadow: 'none',
                    position: 'relative',
                    cursor: 'pointer',
                    transition: 'all 0.2s ease',
                    '&:hover': {
                      transform: 'translateY(-2px)',
                      boxShadow: '0 4px 20px rgba(0,0,0,0.1)'
                    }
                  }}
                >
                  <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 2 }}>
                    <Box
                      sx={{
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        width: 40,
                        height: 40,
                        borderRadius: 2,
                        backgroundColor: '#f59e0b',
                        color: 'white'
                      }}
                    >
                      ðŸ“š
                    </Box>
                    <IconButton size="small">
                      <OpenInNewIcon sx={{ fontSize: 16 }} />
                    </IconButton>
                  </Box>
                  <Typography variant="h3" sx={{ fontWeight: 700, color: '#1f2937', mb: 1 }}>
                    {statsLoading ? <Skeleton width={60} /> : dashboardStats.totalCourses || '13'}
                  </Typography>
                  <Typography variant="body2" sx={{ color: '#6b7280', mb: 1 }}>
                    Total available courses
                  </Typography>
                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>
                    <Typography variant="caption" sx={{ color: '#f59e0b', fontWeight: 600 }}>
                      Courses
                    </Typography>
                  </Box>
                </Card>
              </Grid>
              
              <Grid item xs={12} sm={6} md={3}>
                <Card 
                  sx={{ 
                    p: 3,
                    borderRadius: 3,
                    background: '#f3e8ff',
                    border: 'none',
                    boxShadow: 'none',
                    position: 'relative',
                    cursor: 'pointer',
                    transition: 'all 0.2s ease',
                    '&:hover': {
                      transform: 'translateY(-2px)',
                      boxShadow: '0 4px 20px rgba(0,0,0,0.1)'
                    }
                  }}
                >
                  <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 2 }}>
                    <Box
                      sx={{
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        width: 40,
                        height: 40,
                        borderRadius: 2,
                        backgroundColor: '#8b5cf6',
                        color: 'white'
                      }}
                    >
                      ðŸŽ¬
                    </Box>
                    <IconButton size="small">
                      <OpenInNewIcon sx={{ fontSize: 16 }} />
                    </IconButton>
                  </Box>
                  <Typography variant="h3" sx={{ fontWeight: 700, color: '#1f2937', mb: 1 }}>
                    {statsLoading ? <Skeleton width={60} /> : dashboardStats.totalTeachers || '30'}
                  </Typography>
                  <Typography variant="body2" sx={{ color: '#6b7280', mb: 1 }}>
                    Total uploaded videos
                  </Typography>
                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>
                    <Typography variant="caption" sx={{ color: '#8b5cf6', fontWeight: 600 }}>
                      Videos
                    </Typography>
                  </Box>
                </Card>
              </Grid>
            </Grid>
            
            <Grid container spacing={3}>
              {/* Enhanced Notifications Section */}
              <Grid item xs={12} md={6} lg={4}>
                <Card sx={{ height: '100%', borderRadius: 3 }}>
                  <CardHeader
                    avatar={<Avatar sx={{ bgcolor: theme.palette.primary.main }}><NotificationsActiveIcon /></Avatar>}
                    action={<IconButton onClick={() => navigate('/admin/notifications')}><OpenInNewIcon /></IconButton>}
                    title="Notifications"
                    subheader={`${Array.isArray(notifications) ? notifications.length : 0} active notifications`}
                    titleTypographyProps={{ variant: 'h6', fontWeight: 600 }}
                  />
                  <Divider />
                  <CardContent sx={{ height: 300, overflow: 'auto', p: 0 }}>
                    <List dense>
                      {renderLoadingOrEmpty(notificationsLoading, notifications, "No notifications")}
                      
                      {!notificationsLoading && Array.isArray(notifications) && notifications.map(n => (
                        <ListItem 
                          key={n._id} 
                          selected={!n.read} 
                          sx={{
                            borderLeft: !n.read ? `4px solid ${theme.palette.primary.main}` : 'none',
                            bgcolor: !n.read ? `${theme.palette.primary.main}08` : 'transparent',
                            '&:hover': { bgcolor: theme.palette.action.hover }
                          }}
                        >
                          <ListItemText
                            primary={
                              <Typography 
                                variant="body2" 
                                sx={{ fontWeight: n.read ? 400 : 600 }}
                              >
                                {n.message}
                              </Typography>
                            }
                            secondary={
                              <Typography variant="caption" color="text.secondary">
                                {new Date(n.createdAt).toLocaleString()}
                              </Typography>
                            }
                          />
                        </ListItem>
                      ))}
                    </List>
                  </CardContent>
                </Card>
              </Grid>
              
              {/* Enhanced Activity Feed Section */}
              <Grid item xs={12} md={6} lg={4}>
                <Card sx={{ height: '100%', borderRadius: 3 }}>
                  <CardHeader
                    avatar={<Avatar sx={{ bgcolor: theme.palette.success.main }}><EventNoteIcon /></Avatar>}
                    action={<IconButton><OpenInNewIcon /></IconButton>}
                    title="Recent Activity"
                    subheader={`${Array.isArray(activity) ? activity.length : 0} recent actions`}
                    titleTypographyProps={{ variant: 'h6', fontWeight: 600 }}
                  />
                  <Divider />
                  <CardContent sx={{ height: 300, overflow: 'auto', p: 0 }}>
                    <List dense>
                      {renderLoadingOrEmpty(activityLoading, activity, "No recent activity")}
                      
                      {!activityLoading && Array.isArray(activity) && activity.map(a => (
                        <ListItem 
                          key={a._id} 
                          sx={{ 
                            borderBottom: `1px solid ${theme.palette.divider}`,
                            '&:hover': { bgcolor: theme.palette.action.hover },
                            '&:last-child': { borderBottom: 'none' }
                          }}
                        >
                          <ListItemText
                            primary={
                              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, flexWrap: 'wrap' }}>
                                <Chip 
                                  label={a.action} 
                                  size="small" 
                                  color="primary" 
                                  variant="outlined"
                                  sx={{ 
                                    textTransform: 'capitalize',
                                    fontWeight: 500
                                  }}
                                />
                                <Typography variant="body2" color="text.secondary">
                                  by {a.performedBy?.email || 'System'}
                                  {a.targetUser && <> â†’ {a.targetUser.email}</>}
                                </Typography>
                              </Box>
                            }
                            secondary={
                              <Typography variant="caption" color="text.secondary">
                                {new Date(a.createdAt).toLocaleString()}
                              </Typography>
                            }
                          />
                        </ListItem>
                      ))}
                    </List>
                  </CardContent>
                </Card>
              </Grid>
              
              {/* Student Enrollment Trend Chart */}
              <Grid item xs={12} lg={8}>
                <Card sx={{ height: '100%', borderRadius: 3, p: 3 }}>
                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 3 }}>
                    <Box
                      sx={{
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        width: 40,
                        height: 40,
                        borderRadius: 2,
                        backgroundColor: theme.palette.primary.main,
                        color: 'white'
                      }}
                    >
                      ðŸ“ˆ
                    </Box>
                    <Typography variant="h6" sx={{ fontWeight: 600 }}>
                      Student Enrollment Trend
                    </Typography>
                  </Box>
                  <Box sx={{ 
                    height: 300, 
                    display: 'flex', 
                    alignItems: 'center', 
                    justifyContent: 'center',
                    backgroundColor: '#f8fafc',
                    borderRadius: 2,
                    border: '1px solid #e5e7eb'
                  }}>
                    <Typography color="text.secondary">
                      Chart will be displayed here
                    </Typography>
                  </Box>
                </Card>
              </Grid>
              
              {/* Top Courses */}
              <Grid item xs={12} lg={4}>
                <Card sx={{ height: '100%', borderRadius: 3, p: 3 }}>
                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 3 }}>
                    <Box
                      sx={{
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        width: 40,
                        height: 40,
                        borderRadius: 2,
                        backgroundColor: '#1e3a8a',
                        color: 'white'
                      }}
                    >
                      ðŸŽ¯
                    </Box>
                    <Box>
                      <Typography variant="h6" sx={{ fontWeight: 600 }}>
                        Top Courses
                      </Typography>
                      <Typography variant="caption" color="text.secondary">
                        4 / 4
                      </Typography>
                    </Box>
                  </Box>
                  <Box sx={{ 
                    height: 200, 
                    display: 'flex', 
                    alignItems: 'center', 
                    justifyContent: 'center',
                    backgroundColor: '#f8fafc',
                    borderRadius: 2,
                    border: '1px solid #e5e7eb'
                  }}>
                    <Typography color="text.secondary">
                      Top courses chart will be displayed here
                    </Typography>
                  </Box>
                </Card>
              </Grid>
            </Grid>
          </>
        )}
        
        <Box sx={{ mt: isOnMainDashboard ? 4 : 0 }}>
          <Routes>
            <Route path="dashboard" element={<AnalyticsDashboard />} />
            <Route path="unlock-requests" element={<UnlockRequests />} />
            <Route path="teachers" element={<TeacherManagement currentUser={currentUser} />} />
            <Route path="students" element={<StudentManagement currentUser={currentUser} />} />
            <Route path="courses" element={<CourseManagement currentUser={currentUser} />} />
            <Route path="schools" element={<SchoolManagement />} />
            <Route path="departments" element={<DepartmentManagement />} />
            <Route path="sections" element={<SectionManagement user={currentUser} token={token} />} />
            <Route path="deans" element={<DeanManagement />} />
            <Route path="hods" element={<HODManagement />} />
            <Route path="enhanced-analytics" element={<EnhancedAnalytics />} />
            <Route path="announcements" element={<AnnouncementPage role="admin" />} />
            {currentUser?.role === 'admin' && <Route path="user-roles" element={<UserRoleManagement />} />}
            {currentUser?.role === 'admin' && <Route path="roles" element={<RoleManagement />} />}
            <Route path="*" element={<Navigate to="/admin/dashboard" />} />
          </Routes>
        </Box>
        </Box>
      </Box>
    </Box>
  );
};

export default AdminDashboard;
